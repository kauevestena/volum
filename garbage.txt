            # canvas = QgsMapCanvas()
            
            # QgsMapLayerRegistry.instance().addMapLayer(datapoints)
            # canvas.setExtent(datapoints.extent())


                        # path = "file://"+filename+"?type=csv&xField=X&yField=Y&spatialIndex=yes&subsetIndex=no&watchFile=yes"


            # crsOrt = QgsCoordinateReferenceSystem()
            # crsOrt.createFromProj4("+proj=ortho +lat_0=0.0 +lon_0=0.0 +x_0=0 +y_0=0")

            # crs = QgsCoordinateReferenceSystem()
            # crs.createFromId(31982)
            # datapoints.setCrs(crs)

            # if self.dlg.defProjButton.clicked:
            #     datapoints.setCrs(crs2)





            # # # # export layer to shape
            # # # _writer = QgsVectorFileWriter.writeAsVectorFormat(datapoints,point2spath,"utf-8",None,"ESRI Shapefile")
            # # # datapoints = _writer

            # print datapoints.crs

    # def select_output_file(self):
    #     filename = QFileDialog.getSaveFileName(volumDialog(), "Select output file ","", '*.txt')
    #     self.dlg.lineEdit.setText(filename)


ACESSANDO O NOME DE UM CAMPO
                fields = xymean.pendingFields()   
            field_names = [field.name() for field in fields]
            print fields.field(0).name()

    def retrieve_att(self,layer,att_id,row_id):
        iter = layer.getFeatures()
        attrs = []
        for feature in iter:
            attrs.append(feature.attributes())
        return attrs[att_id][row_id]



            # fields = xymean.pendingFields()   
            # field_names = [field.name() for field in fields]
            # # print fields.field(0).name()
            # # for elem in xymean.getFeatures():  
            # #     print dict(zip(field_names, elem.attributes()))
            # print fields.field(0).elem.attributes(0)

            # # iterator = layer.getFeatures(QgsFeatureRequest().setFilterFid(1))
                # # feature = next(iterator)
            # # attrs = feature.attributes()
            # print attrs[0]

        # self.dlg.aboutDefProj.setText('''<a href='http://stackoverflow.com'>sobre</a>''')


def det(l):
#thx: http://code.activestate.com/recipes/578108-determinant-of-matrix-of-any-order/
    n=len(l)
    if (n>2):
        i=1
        t=0
        sum=0
        while t<=n-1:
            d={}
            t1=1
            while t1<=n-1:
                m=0
                d[t1]=[]
                while m<=n-1:
                    if (m==t):
                        u=0
                    else:
                        d[t1].append(l[t1][m])
                    m+=1
                t1+=1
            l1=[d[x] for x in d]
            sum=sum+i*(l[0][t])*(det(l1))
            i=i*(-1)
            t+=1
        return sum
    else:
        return (l[0][0]*l[1][1]-l[0][1]*l[1][0])



computername = "kaue2"
# # computername = "kauevestena"
# #HITF = Handle In The Future